name: build CAAA deb

on:
  push:
    tags:
      - "v*"
jobs:
  deb:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2

      - run: sudo apt-get install -y build-essential cmake openssl libssl-dev

      - run: mkdir -p lib
      - run: git clone https://github.com/cktan/tomlc99.git
        working-directory: ./lib
      - run: make
        working-directory: ./lib/tomlc99
      - run: mv libtoml.pc.sample libtoml.pc
        working-directory: ./lib/tomlc99
      - run: sudo make install
        working-directory: ./lib/tomlc99

      - run: mkdir -p build
      - run: cmake ..
        working-directory: ./build

      - run: cmake --build .
        working-directory: ./build

      - run: cpack -G DEB
        working-directory: ./build

      - uses: ncipollo/release-action@v1
        with:
          name: latest
          tag: ${{env.RELEASE_VERSION}}
          artifacts: build/*.deb
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2

      - run: sudo apt-get install -y build-essential cmake openssl libssl-dev

      - run: mkdir -p lib
      - run: git clone https://github.com/cktan/tomlc99.git
        working-directory: ./lib
      - run: make
        working-directory: ./lib/tomlc99
      - run: mv libtoml.pc.sample libtoml.pc
        working-directory: ./lib/tomlc99
      - run: sudo make install
        working-directory: ./lib/tomlc99

      - run: mkdir -p build
      - run: cmake ..
        working-directory: ./build

      - run: make
        working-directory: ./build

      - run: openssl help
        working-directory: ./build

      - run: make test
        working-directory: ./build
      #- run: make test
      #  working-directory: ./build
